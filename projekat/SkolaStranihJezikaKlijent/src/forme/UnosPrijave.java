/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Klijent;
import domen.Korisnik;
import domen.Kurs;
import domen.PrijavaZaKurs;
import domen.StavkaPrijave;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import model.ModelTabeleStavke;
import transfer.KlijentskiTransferObjekat;
import transfer.ServerskiTransferObjekat;

/**
 *
 * @author Milica
 */
public class UnosPrijave extends javax.swing.JFrame {

    double ukupanIznos = 0;
    Korisnik ulogovani;
    PrikazPrijave pp;
    PrijavaZaKurs p;
    

    public void setUlogovani(Korisnik ulogovani) {
        this.ulogovani = ulogovani;
    }

    /**
     * Creates new form UnosPrijave
     */
    public UnosPrijave() {
        initComponents();
        podesi();
        btnIzmeni.setVisible(false);
       
        popuniKomboKlijenata();
        popuniKomboKurseva();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnObrisiStavku = new javax.swing.JButton();
        btnDodajStavku = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        txtUkupanIznos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmbKursevi = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbKlijenti = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unos prijave");

        tabela.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        btnObrisiStavku.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnObrisiStavku.setText("Obrisi ");
        btnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStavkuActionPerformed(evt);
            }
        });

        btnDodajStavku.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDodajStavku.setText("Dodaj ");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        btnSacuvaj.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSacuvaj.setForeground(new java.awt.Color(0, 102, 102));
        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnIzmeni.setForeground(new java.awt.Color(0, 102, 102));
        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        txtUkupanIznos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ukupan iznos:");

        cmbKursevi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbKursevi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Kursevi:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Izaberite klijenta:");

        cmbKlijenti.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbKlijenti.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbKursevi, 0, 364, Short.MAX_VALUE)
                            .addComponent(txtUkupanIznos)
                            .addComponent(cmbKlijenti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnObrisiStavku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodajStavku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(65, 65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbKlijenti, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUkupanIznos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKursevi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisiStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(295, 295, 295)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed

        Kurs k = (Kurs) cmbKursevi.getSelectedItem();
        StavkaPrijave sp = new StavkaPrijave(-1, null, k.getCena(), k);
        ModelTabeleStavke mts = (ModelTabeleStavke) tabela.getModel();
        mts.dodaj(sp);

        ukupanIznos += k.getCena();
        txtUkupanIznos.setText(ukupanIznos + "");


    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStavkuActionPerformed
        // TODO add your handling code here:
        int red = tabela.getSelectedRow();
        if (red != -1) {
            ModelTabeleStavke mts = (ModelTabeleStavke) tabela.getModel();

            StavkaPrijave s = mts.getLista().get(red);
            ukupanIznos -= s.getCena();
            txtUkupanIznos.setText(ukupanIznos + "");
            mts.obrisi(red);
        } else {
            JOptionPane.showMessageDialog(this, "Izaberite red za brisanje");
        }
    }//GEN-LAST:event_btnObrisiStavkuActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleStavke mts = (ModelTabeleStavke) tabela.getModel();
        
        ArrayList<StavkaPrijave> lista = mts.getLista();
        
        int brojac =0;
        for (StavkaPrijave stavkaPrijave : lista) {
            brojac++;
            stavkaPrijave.setRbStavke(brojac);
            
        }
        
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti bar jedan kurs");
            return;
        }
        PrijavaZaKurs pk = new PrijavaZaKurs(-1, ukupanIznos, ulogovani, (Klijent) cmbKlijenti.getSelectedItem(), lista);
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(pk);
        kto.setOperacija(konstante.Konstante.SACUVAJ_PRIJAVU);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();

        JOptionPane.showMessageDialog(this, sto.getPoruka());
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        // TODO add your handling code here:
        ModelTabeleStavke mts = (ModelTabeleStavke) tabela.getModel();
        
        ArrayList<StavkaPrijave> lista = mts.getLista();
        
        int brojac =0;
        for (StavkaPrijave stavkaPrijave : lista) {
            brojac++;
            stavkaPrijave.setRbStavke(brojac);
            stavkaPrijave.setPrijava(p);
            
        }
        
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti bar jedan kurs");
            return;
        }
        PrijavaZaKurs pk = new PrijavaZaKurs(p.getPrijavaID(), ukupanIznos, p.getKorisnik(), (Klijent) cmbKlijenti.getSelectedItem(), lista);
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(pk);
        kto.setOperacija(konstante.Konstante.IZMENI_PRIJAVU);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();

        JOptionPane.showMessageDialog(this, sto.getPoruka());
        
        
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosPrijave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnosPrijave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisiStavku;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKlijenti;
    private javax.swing.JComboBox cmbKursevi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtUkupanIznos;
    // End of variables declaration//GEN-END:variables

    private void popuniKomboKurseva() {

        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setOperacija(konstante.Konstante.VRATI_KURSEVE);
        kto.setParametar(new Kurs());
        Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
        ArrayList< Kurs> kursevi = (ArrayList< Kurs>) sto.getOdgovor();

        cmbKursevi.removeAllItems();

        for (Kurs kurs : kursevi) {
            cmbKursevi.addItem(kurs);
        }
    }

    private void srediFormu() {
        txtUkupanIznos.setEditable(false);
        btnIzmeni.setVisible(false);
        sreditabelu();

    }

    private void sreditabelu() {
        model.ModelTabeleStavke mts = new ModelTabeleStavke();
        tabela.setModel(mts);
    }

    private void popuniKomboKlijenata() {
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setOperacija(konstante.Konstante.VRATI_KLIJENTE);
        kto.setParametar(new Klijent());
        Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
        ArrayList< Klijent> klijenti = (ArrayList< Klijent>) sto.getOdgovor();
        cmbKlijenti.removeAllItems();
        for (Klijent klijent : klijenti) {
            cmbKlijenti.addItem(klijent);

        }
    }

    private void podesi() {
        setSize(1100, 800);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    void izmeniFormu(PrijavaZaKurs p, PrikazPrijave pp) {
        
        ukupanIznos=p.getUkupanIznos();
        btnIzmeni.setVisible(true);
        
        btnSacuvaj.setVisible(false);
        this.p = p;
        this.pp = pp;
        cmbKlijenti.setSelectedItem(p.getKlijent());
        txtUkupanIznos.setText(p.getUkupanIznos()+"");
        
        //prazna lista stavki
        ArrayList<StavkaPrijave> stavke = p.getStavke();
        for (StavkaPrijave stavkaPrijave : stavke) {
            System.out.println(stavkaPrijave.getKurs() + " "+ stavkaPrijave.getCena());
        }
        ModelTabeleStavke mts = new ModelTabeleStavke(stavke);
        
        tabela.setModel(mts);
        
    }
}
