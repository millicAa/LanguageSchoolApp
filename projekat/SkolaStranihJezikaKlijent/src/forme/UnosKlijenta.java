/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Klijent;
import domen.Mesto;
import domen.PrijavaZaKurs;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import transfer.KlijentskiTransferObjekat;
import transfer.ServerskiTransferObjekat;

/**
 *
 * @author Milica
 */
public class UnosKlijenta extends javax.swing.JFrame {

    Klijent k;
    PrikazKlijenata pk;

    /**
     * Creates new form UnosKlijenta
     */
    public UnosKlijenta() {
        initComponents();
        setSize(1100,800);
        centar();
        btnIzmeni.setVisible(false);
        btnObrisi.setVisible(false);
        popuniKomboMesta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbMesta = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unos novog klijenta");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ime:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Prezime:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Datum rodjenja:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mesto:");

        cmbMesta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbMesta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSacuvaj.setForeground(new java.awt.Color(0, 102, 102));
        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnIzmeni.setForeground(new java.awt.Color(0, 102, 102));
        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnObrisi.setForeground(new java.awt.Color(0, 102, 102));
        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel5.setText("(format : dd.MM.yyyy)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPrezime)
                                .addComponent(txtIme)
                                .addComponent(txtDatum)
                                .addComponent(cmbMesta, 0, 482, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(btnIzmeni)
                        .addGap(127, 127, 127)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMesta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(190, 190, 190)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        String ime = txtIme.getText();
        String prez = txtPrezime.getText();
        String datum = txtDatum.getText();

        if (ime.isEmpty() || prez.isEmpty() || datum.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite sva polja.");
            return;
        }
        int duzina= datum.length();
        if(duzina!=10){
             JOptionPane.showMessageDialog(this, "Unesite datum u navedenom formatu.");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date dat = null;
        try {
            dat = sdf.parse(datum);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unesite datum u navedenom formatu.");
            return;
            //Logger.getLogger(UnosKlijenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        Mesto mesto = (Mesto) cmbMesta.getSelectedItem();
        Klijent kl = new Klijent(-1, ime, prez, dat, mesto);
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(kl);
        kto.setOperacija(konstante.Konstante.SACUVAJ_KLIJENTA);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();

        JOptionPane.showMessageDialog(this, sto.getPoruka());


    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
       String ime = txtIme.getText();
        String prez = txtPrezime.getText();
        String datum = txtDatum.getText();

        if (ime.isEmpty() || prez.isEmpty() || datum.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite sva polja.");
            return;
        }
        int duzina= datum.length();
        if(duzina!=10){
             JOptionPane.showMessageDialog(this, "Unesite datum u navedenom formatu.");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date dat = null;
        try {
            dat = sdf.parse(datum);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unesite datum u navedenom formatu.");
            return;
            //Logger.getLogger(UnosKlijenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Klijent klijent = new Klijent(k.getKlijentID(), ime, prez, dat, (Mesto) cmbMesta.getSelectedItem());
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(klijent);
        kto.setOperacija(konstante.Konstante.IZMENI_KLIJENTA);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();
        JOptionPane.showMessageDialog(this, sto.getPoruka());
        pk.srediTabelu();
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if(proveriDaLiJePoslaoPrijavu(k.getKlijentID())){
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(k);
        kto.setOperacija(konstante.Konstante.OBRISI_KLIJENTA);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();
        JOptionPane.showMessageDialog(this, sto.getPoruka());
        this.setVisible(false);
        pk.srediTabelu();
        } else {
            JOptionPane.showMessageDialog(this, "Postoji prijava sa tim klijentom. Sistem ne moze da obrise klijenta.");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosKlijenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosKlijenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosKlijenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosKlijenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnosKlijenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbMesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniKomboMesta() {

        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setOperacija(konstante.Konstante.VRATI_MESTA);
        kto.setParametar(new Mesto());
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();
        ArrayList<Mesto> lista = (ArrayList<Mesto>) sto.getOdgovor();
        if (lista == null) {
            System.out.println("Prazna");
            return;
        }
        cmbMesta.removeAllItems();
        for (Mesto mesto : lista) {
            cmbMesta.addItem(mesto);
        }

    }

    void izmeniFormu(Klijent k, PrikazKlijenata pk) {
        btnIzmeni.setVisible(true);
        btnObrisi.setVisible(true);
        btnSacuvaj.setVisible(false);
        this.k = k;
        this.pk = pk;
        txtIme.setText(k.getIme());
        txtPrezime.setText(k.getPrezime());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        String dat = sdf.format(k.getDatumRodjenja());
        txtDatum.setText(dat);
        cmbMesta.setSelectedItem(k.getMesto());

    }

    private void centar() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2- this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    private boolean proveriDaLiJePoslaoPrijavu(int klijentID) {
        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
        kto.setParametar(new PrijavaZaKurs());
        kto.setOperacija(konstante.Konstante.VRATI_PRIJAVE);
        komunikacija.Komunikacija.getInstanca().posaljiZahtev(kto);
        ServerskiTransferObjekat sto = komunikacija.Komunikacija.getInstanca().primiOdgovor();
        ArrayList<PrijavaZaKurs> listaPrijava = (ArrayList<PrijavaZaKurs>) sto.getOdgovor();
        
        for (PrijavaZaKurs prijavaZaKurs : listaPrijava) {
            if(prijavaZaKurs.getKlijent().getKlijentID()==klijentID)
                return false;
        }
        return true;
    }
}
